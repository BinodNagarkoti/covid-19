{"version":3,"sources":["components/Charts/Charts.module.css","images/covid-19.png","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/DataPicker/CountryPicker.jsx","utils.js","components/DataPicker/ChartPicker.jsx","components/Footer/Footer.jsx","App.jsx","theme.js","serviceWorker.js","index.js","components/Cards/Cards.module.css","App.module.css","components/Footer/Footer.module.css"],"names":["module","exports","Cards","data","confirmed","deaths","recovered","updated_at","active","critical","className","styles","container","Grid","justify","item","color","xs","md","cx","card","CardContent","Typography","gutterBottom","variant","start","end","duration","separator","Date","toDateString","toFixed","url2","ChangeableURL","fetchGlobalYearlyData","a","country","axios","get","covidData","timeline","console","log","groupedByYear","d3","key","d","getFullYear","rollup","value","entries","fetchGlobalMonthlyData","groupedByMonth","getMonth","fetchDailyData","modifiedData","map","dailyData","date","loading","fetchGlobalCriticalData","critical_arr_data","latest_data","total","reduce","acc","fetchData","calculated","fetchCountries","availabel_data","filter","name","code","sort","error","Charts","chartType","useState","setDailyData","monthlyData","setMonthlyData","yearlyData","setYearlyData","monthNames","selectedChartType","setSelectedChartType","fetchAPI","useEffect","MonthlyChart","length","id","labels","datasets","reverse","label","borderColor","backgroundColor","fill","dailyChart","yearlyChart","Paper","style","width","borderRadius","boxShadow","textAlign","useStyles","makeStyles","theme","formControl","margin","spacing","marginBottom","minWidth","CountryPicker","handleCountryChange","classes","fetchedCountries","setFetchedCountries","FormControl","Select","native","inputProps","onChange","e","target","aria-label","ScrollOptions","this","behavior","block","ChartPicker","handleChartChange","elementId","element","document","getElementById","scrollOptions","optJson","Object","assign","scrollIntoView","scrollToElement","Footer","Link","underline","href","social_link","Provider","size","Loading","require","App","props","fetchedData","setState","chart","prevState","state","fetcheddata","image","src","coronaImage","alt","direction","flexGrow","Component","createMuiTheme","palette","type","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","ThemeProvider","Alert","severity","AlertTitle","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e5569b6b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__eLkuq\"};","module.exports = __webpack_public_path__ + \"static/media/covid-19.6ce9074d.png\";","/* eslint-disable camelcase */\r\n/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport { CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({\r\n  data: {\r\n    confirmed,\r\n    deaths,\r\n    recovered,\r\n    updated_at,\r\n    active,\r\n    critical,\r\n    // new_deaths,\r\n    // new_confirmed,\r\n    // new_recovered,\r\n  },\r\n}) => {\r\n  // console.log(deaths, confirmed, recovered);\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container justify=\"center\">\r\n        <Grid item color=\"primary\" xs={12} md={2} className={cx(styles.card)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Confirmed\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={confirmed ?? 0} duration={2} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(updated_at).toDateString()}</Typography>\r\n            <Typography variant=\"body2\"> Total Number of active case of COVID-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={12} md={2} className={cx(styles.card)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recoverd <small>({((recovered / confirmed) * 100).toFixed(2)}%) </small>\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={recovered ?? 0} duration={2} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(updated_at).toDateString()}</Typography>\r\n\r\n            <Typography variant=\"body2\"> Total Number of recovered from COVID-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={2} className={cx(styles.card)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Critical\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={critical ?? 0} duration={2} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(updated_at).toDateString()}</Typography>\r\n\r\n            <Typography variant=\"body2\"> Total Number of Critical caused by COVID-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={2} className={cx(styles.card)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths <small>({((deaths / confirmed) * 100).toFixed(2)}%) </small>\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={deaths ?? 0} duration={2} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(updated_at).toDateString()}</Typography>\r\n\r\n            <Typography variant=\"body2\"> Total Number of death caused by COVID-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item color=\"primary\" xs={12} md={2} className={cx(styles.card)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Active\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={active ?? 0} duration={2} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(updated_at).toDateString()}</Typography>\r\n            <Typography variant=\"body2\"> Total Number of active case of COVID-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Cards;\r\n","/* eslint-disable camelcase */\r\n/* eslint-disable no-console */\r\n/* eslint-disable consistent-return */\r\nimport axios from 'axios';\r\nimport * as d3 from 'd3';\r\n\r\n// const url = 'https://covid19.mathdro.id/api';\r\nconst url2 = 'https://corona-api.com/';\r\nlet ChangeableURL = url2;\r\n\r\nexport const fetchGlobalYearlyData = async (country = '') => {\r\n    ChangeableURL = country ? `${url2}/countries/${country}` : `${url2}/timeline`;\r\n    try {\r\n        const {\r\n            data: { data },\r\n        } = await axios.get(ChangeableURL);\r\n        const covidData = country ? data.timeline : data;\r\n        console.log(`yearly timeline data ${country}`, country ? data.timeline : data);\r\n        const groupedByYear = d3\r\n            .nest()\r\n            .key((d) => {\r\n                return new Date(d.updated_at).getFullYear();\r\n            })\r\n            .rollup((value) => ({\r\n                confirmed: d3.sum(value, (d) => d.confirmed),\r\n                deaths: d3.sum(value, (d) => d.deaths),\r\n                active: d3.sum(value, (d) => d.active),\r\n                recovered: d3.sum(value, (d) => d.recovered),\r\n            }))\r\n            .entries(covidData);\r\n        console.log('group by year', groupedByYear);\r\n\r\n        return groupedByYear;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const fetchGlobalMonthlyData = async (country = '') => {\r\n  ChangeableURL = country ? `${url2}/countries/${country}` : `${url2}/timeline`;\r\n  try {\r\n    const {\r\n      data: { data },\r\n    } = await axios.get(ChangeableURL);\r\n    const covidData = country ? data.timeline : data;\r\n    console.log(`monthly timeline data ${country}`, country ? data.timeline : data);\r\n    const groupedByMonth = d3\r\n      .nest()\r\n      .key((d) => {\r\n        return new Date(d.updated_at).getMonth();\r\n      })\r\n      .rollup((value) => ({\r\n        confirmed: d3.sum(value, (d) => d.confirmed),\r\n        deaths: d3.sum(value, (d) => d.deaths),\r\n        active: d3.sum(value, (d) => d.active),\r\n        recovered: d3.sum(value, (d) => d.recovered),\r\n      }))\r\n      .entries(covidData);\r\n      console.log('group by month', groupedByMonth);\r\n\r\n      return groupedByMonth;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// fetch daily data\r\n\r\nexport const fetchDailyData = async (country) => {\r\n    ChangeableURL = country ? `${url2}/countries/${country}` : `${url2}/timeline`;\r\n    try {\r\n        const {\r\n            data: { data },\r\n        } = await axios.get(ChangeableURL);\r\n        const covidData = country ? data.timeline : data;\r\n        const modifiedData = covidData.map((dailyData) => ({\r\n            recovered: dailyData.recovered,\r\n            active: dailyData.active,\r\n            deaths: dailyData.deaths,\r\n            date: dailyData.date,\r\n            loading: false,\r\n        }));\r\n\r\n        return modifiedData;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n// fetch data\r\nconst fetchGlobalCriticalData = async () => {\r\n  const {\r\n    data: { data },\r\n  } = await axios.get(`${url2}/countries`);\r\n  const critical_arr_data = data.map((item) => item.latest_data.critical);\r\n  const total = critical_arr_data.reduce((acc, value) => acc + value);\r\n  return total;\r\n  // console.log(criticalData);\r\n};\r\n\r\nexport const fetchData = async (country = '') => {\r\n  ChangeableURL = country ? `${url2}/countries/${country}` : `${url2}/timeline`;\r\n  try {\r\n    const {\r\n      data: { data },\r\n    } = await axios.get(ChangeableURL);\r\n    console.log(`critical data ${country}: ${data?.latest_data?.critical}`);\r\n    const covidData = country ? data.latest_data : data[0];\r\n    const critical = country ? covidData.critical : await fetchGlobalCriticalData();\r\n    const updated_at = country ? data.updated_at : data[0].updated_at;\r\n    const calculated = country ? covidData.calculated : 0;\r\n    const active = covidData.confirmed - covidData.recovered - covidData.deaths;\r\n    return {\r\n      confirmed: covidData.confirmed,\r\n      recovered: covidData.recovered,\r\n      deaths: covidData.deaths,\r\n      active,\r\n      critical,\r\n      calculated,\r\n      updated_at,\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n\r\n\r\n// export const fetchDailyData = async (country) => {\r\n//   const data = country ? fetchCountryBasedDailyData(country) : fetchGlobalDailyData();\r\n//   return data;\r\n// };\r\n\r\n// fetch coutries\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { data },\r\n    } = await axios.get(`${url2}/countries`);\r\n\r\n    const availabel_data = data.filter((country) => country.latest_data.confirmed > 0);\r\n    // console.log('check avaiable data', availabel_data);\r\n    return availabel_data.map((country) => ({ name: country.name, code: country.code })).sort();\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable no-shadow */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Paper } from '@material-ui/core';\r\n// eslint-disable-next-line import/named\r\nimport { fetchDailyData, fetchGlobalMonthlyData, fetchGlobalYearlyData } from '../../api/index';\r\nimport styles from './Charts.module.css';\r\nconst Charts = ({ country, chartType }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n  const [monthlyData, setMonthlyData] = useState([]);\r\n  const [yearlyData, setYearlyData] = useState([]);\r\n  const [monthNames] = useState([\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ]);\r\n  const [selectedChartType, setSelectedChartType] = useState('');\r\n\r\n    const fetchAPI = async () => {\r\n        setDailyData(await fetchDailyData(country));\r\n        setMonthlyData(await fetchGlobalMonthlyData(country));\r\n        setYearlyData(await fetchGlobalYearlyData(country));\r\n        setSelectedChartType(chartType);\r\n        \r\n  };\r\n  useEffect(() => {\r\n    fetchAPI();\r\n  }, [country, chartType]);\r\n  const MonthlyChart = monthlyData.length ? (\r\n      <Line id={chartType}\r\n      data={{\r\n        labels: monthlyData.map(({ key }) => monthNames[key]),\r\n        datasets: [\r\n          {\r\n                data: monthlyData.map(({ value: { active } }) => active).reverse(),\r\n            label: 'Active',\r\n            borderColor: 'rgba(0,0,255,0.5)',\r\n            backgroundColor: 'rgba(0,0,255,0.5)',\r\n            fill: true,\r\n          },\r\n          {\r\n              data: monthlyData.map(({ value: { recovered } }) => recovered).reverse(),\r\n            label: 'Recovered',\r\n            borderColor: 'rgba(0,187,0,0.5)',\r\n            backgroundColor: 'rgba(0,255,0,0.5)',\r\n            fill: true,\r\n          },\r\n          {\r\n              data: monthlyData.map(({ value: { deaths } }) => deaths).reverse(),\r\n            label: 'Deaths',\r\n            borderColor: 'rgba(255,0,0,0.5)',\r\n            backgroundColor: 'rgba(255,0,0,0.5)',\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : (\r\n    ''\r\n  );\r\n  const dailyChart = dailyData.length ? (\r\n      <Line id={chartType}\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n                data: dailyData.map(({ active }) => active).reverse(),\r\n            label: 'Active',\r\n            borderColor: 'rgba(0,0,255,0.5)',\r\n            backgroundColor: 'rgba(0,0,255,0.5)',\r\n            fill: true,\r\n          },\r\n          {\r\n              data: dailyData.map(({ recovered }) => recovered).reverse(),\r\n            label: 'Recovered',\r\n            borderColor: 'rgba(0,187,0,0.5)',\r\n            backgroundColor: 'rgba(0,255,0,0.5)',\r\n            fill: true,\r\n          },\r\n          {\r\n              data: dailyData.map(({ deaths }) => deaths).reverse(),\r\n            label: 'Deaths',\r\n            borderColor: 'rgba(255,0,0,0.5)',\r\n            backgroundColor: 'rgba(255,0,0,0.5)',\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n    ) : null;\r\n\r\n    const yearlyChart = yearlyData.length>0 ? (\r\n        <Line id={chartType}\r\n            data={{\r\n                labels: yearlyData.map(({ key }) => key).reverse(),\r\n                datasets: [\r\n                    {\r\n                        data: yearlyData.map(({ value: { active } }) => active).reverse(),\r\n                        label: 'Active',\r\n                        borderColor: 'rgba(0,0,255,0.5)',\r\n                        backgroundColor: 'rgba(0,0,255,0.5)',\r\n                        fill: true,\r\n                    },\r\n                    {\r\n                        data: yearlyData.map(({ value: { recovered } }) => recovered).reverse(),\r\n                        label: 'Recovered',\r\n                        borderColor: 'rgba(0,187,0,0.5)',\r\n                        backgroundColor: 'rgba(0,255,0,0.5)',\r\n                        fill: true,\r\n                    },\r\n                    {\r\n                        data: yearlyData.map(({ value: { deaths } }) => deaths).reverse(),\r\n                        label: 'Deaths',\r\n                        borderColor: 'rgba(255,0,0,0.5)',\r\n                        backgroundColor: 'rgba(255,0,0,0.5)',\r\n                        fill: true,\r\n                    },\r\n                ],\r\n            }}\r\n        />\r\n    ) : null;\r\n\r\n  return (\r\n      <div className={styles.container}>\r\n      <Paper\r\n        style={{\r\n          width: '100%',\r\n          backgroundColor: '#e0e0e0',\r\n          borderRadius: '10px',\r\n          boxShadow:\r\n            '6px 6px 14px 0 rgba(0, 0, 0, 0.253) , -8px -8px 18px 0 rgba(255, 255, 255, 0.76) ',\r\n        }}\r\n      >\r\n        <div>\r\n          <h1 style={{ textAlign: 'center' }}>{selectedChartType}</h1>\r\n                  {selectedChartType === 'Daily Data' ? dailyChart : selectedChartType  === 'Yearly Data' ? yearlyChart : MonthlyChart}\r\n        </div>{' '}\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\nexport default Charts;\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Select, FormControl, Paper } from '@material-ui/core';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport styles from './DataPicker.module.css';\r\n// eslint-disable-next-line import/named\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    marginBottom: 50,\r\n    minWidth: 220,\r\n  },\r\n}));\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const classes = useStyles();\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n      // console.log(`country List: ${fetchedCountries}`);\r\n    };\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n\r\n  return (\r\n    <FormControl className={classes.formControl}>\r\n      {/* <InputLabel shrink htmlFor=\"outlined-age-native-simple\">\r\n        Country\r\n      </InputLabel> */}\r\n      <Select\r\n        native\r\n        label=\"Country\"\r\n        inputProps={{\r\n          name: 'Country',\r\n          id: '',\r\n        }}\r\n        onChange={(e) => handleCountryChange(e.target.value)}\r\n      >\r\n        <option aria-label=\"None\" value=\"\">\r\n          Global\r\n        </option>\r\n        {fetchedCountries.map((country) => (\r\n          <option key={country.code} value={country.code}>\r\n            {country.name}\r\n          </option>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\nexport default CountryPicker;\r\n","export class ScrollOptions {\r\n    behavior;\r\n    block;\r\n    constructor() {\r\n        this.behavior = \"auto\";\r\n        this.block = \"start\";\r\n    }\r\n} \r\n\r\n//behaviour: //auto or smooth\r\n//block: //start, center,end or nearest\r\nexport function scrollToElement(elementId, behavior= \"auto\", block= \"start\") {\r\n    var element = document.getElementById(elementId);\r\n    console.log(elementId);\r\n    if (element) {\r\n        const scrollOptions = new ScrollOptions();\r\n        scrollOptions.behavior = behavior;\r\n        scrollOptions.block = block;\r\n\r\n        var optJson = {};\r\n        Object.assign(optJson, scrollOptions);\r\n        element.scrollIntoView(optJson);\r\n    }\r\n}","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport { FormControl, Select } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport { scrollToElement} from\"../../utils\"\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    marginBottom: 50,\r\n    minWidth: 220,\r\n  },\r\n}));\r\nconst ChartPicker = ({ handleChartChange, chartType }) => {\r\n  const classes = useStyles();\r\n  //   const [chartType, setChartType] = useState('');\r\n\r\n  //   useEffect(() => {\r\n  //     const fetchAPI = async () => {\r\n  //       setFetchedCountries(await fetchCountries());\r\n  //       // console.log(`country List: ${fetchedCountries}`);\r\n  //     };\r\n  //     fetchAPI();\r\n  //   }, [setChartType]);\r\n\r\n  return (\r\n    <FormControl className={classes.formControl}>\r\n          <Select\r\n              native\r\n              label=\"Chart\"\r\n              inputProps={{\r\n                  name: 'chart',\r\n                  id: `${chartType}_chart`,\r\n              }}\r\n              onChange={(e) => { handleChartChange(e.target.value); return scrollToElement(chartType, \"smooth\", \"center\")}}\r\n      >\r\n        <option value=\"Daily Data\">\r\n          Daily Data\r\n        </option>\r\n        <option value=\"Monthly Data\">\r\n                  Monthly Data\r\n        </option>\r\n        <option value=\"Yearly Data\">\r\n                  Yearly Data\r\n        </option>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\nexport default ChartPicker;\r\n","import React from 'react';\r\nimport { Typography, Link } from '@material-ui/core';\r\nimport { FaFacebook, FaTwitter, FaGithub, FaLinkedin } from 'react-icons/fa';\r\nimport { IconContext } from 'react-icons';\r\nimport styles from './Footer.module.css';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <Typography>\r\n        By{' '}\r\n        <Link underline=\"none\" color=\"primary\" href=\"https://github.com/BinodNagarkoti\">\r\n          Binod Nagarkoti\r\n        </Link>\r\n          </Typography>\r\n          <br/>\r\n      <Typography className={styles.social_link}>\r\n        <IconContext.Provider value={{ color: '#385898', size: '25px' }}>\r\n          <Link underline=\"none\" href=\"https://www.facebook.com/Binodb/\" name=\"facebook\">\r\n            <FaFacebook />\r\n          </Link>\r\n        </IconContext.Provider>\r\n        <IconContext.Provider value={{ color: 'rgb(29, 161, 242)', size: '25px' }}>\r\n          <Link underline=\"none\" href=\"https://twitter.com/binod1365\" name=\"Twitter\">\r\n            <FaTwitter />\r\n          </Link>\r\n        </IconContext.Provider>\r\n        <IconContext.Provider value={{ color: '#003f67', size: '25px' }}>\r\n          <Link\r\n            underline=\"none\"\r\n            href=\"https://www.linkedin.com/in/binod-nagarkoti-496245128?lipi=urn%3Ali%3Apage%3Ad_flagship3_profile_view_base_contact_details%3B0rrxJXsqT0SQGAfwBMDI7A%3D%3D\"\r\n            name=\"LinkedIn\"\r\n          >\r\n            <FaLinkedin />\r\n          </Link>\r\n        </IconContext.Provider>\r\n        <IconContext.Provider value={{ color: 'black', size: '25px' }}>\r\n          <Link underline=\"none\" href=\"https://github.com/BinodNagarkoti\" name=\"Github\">\r\n            <FaGithub />\r\n          </Link>\r\n        </IconContext.Provider>\r\n          </Typography>\r\n          <br />\r\n      <Typography color=\"textSecondary\"> May 31 2020 </Typography>\r\n    </div>\r\n  );\r\n};\r\nexport default Footer;\r\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Charts, Cards, CountryPicker, Footer, ChartPicker } from './components';\r\nimport style from './App.module.css';\r\n// eslint-disable-next-line import/named\r\nimport { fetchData } from './api';\r\nimport coronaImage from './images/covid-19.png';\r\nimport { scrollToElement } from './utils'\r\nconst Loading = require('react-loading-animation');\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: { loading: true },\r\n      country: '',\r\n      chartType: 'Daily Data',\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const fetcheddata = await fetchData();\r\n    this.setState({ data: fetcheddata });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({ data: { loading: fetchedData?.loading, ...fetchedData }, country });\r\n  };\r\n\r\n  handleChartChange = (chart) => {\r\n      this.setState((prevState) => ({ ...prevState, chartType: chart }));\r\n      \r\n  };\r\n\r\n  render() {\r\n    const { data, country, chartType } = this.state;\r\n    if (data?.loading) {\r\n      return (\r\n        <main className={style.loading}>\r\n          <h1 style={{ textAlign: 'center' }}>Fetching COVID-19 Data</h1>\r\n          <Loading />\r\n        </main>\r\n      );\r\n    }\r\n    return (\r\n      <main className={style.container}>\r\n        <div className={style.image}>\r\n          <img src={coronaImage} alt=\"COVID-19\" />\r\n        </div>\r\n        <Cards data={data} />\r\n        <div>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            style={{ flexGrow: '1' }}\r\n            // justify=\"center\"\r\n            // alignItems=\"center\"\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={12}>\r\n              <Grid container justify=\"center\" spacing={3}>\r\n                <Grid item>\r\n                  <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                </Grid>\r\n                <Grid item>\r\n                  <ChartPicker handleChartChange={this.handleChartChange} chartType={chartType} />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n            <Charts data={data} chartType={chartType} country={country} />\r\n              <Footer />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'light',\r\n  },\r\n});\r\nexport default theme;\r\n","/* eslint-disable no-use-before-define */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-console */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","/* eslint-disable import/no-named-as-default */\r\n/* eslint-disable import/no-named-as-default-member */\r\n/* eslint-disable react/jsx-filename-extension */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { Offline, Online } from 'react-detect-offline';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport App from './App';\r\nimport theme from './theme';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Online>\r\n      <ThemeProvider theme={theme}>\r\n        <App />\r\n      </ThemeProvider>\r\n    </Online>\r\n    <Offline>\r\n      <Alert severity=\"error\">\r\n        <AlertTitle> No Internet </AlertTitle> Sorry! There is no{' '}\r\n        <strong>internet Connection</strong>\r\n      </Alert>\r\n    </Offline>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__hPhx-\",\"MuiCard-root\":\"Cards_MuiCard-root__GxefG\",\"card\":\"Cards_card__2nIbt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__10qpW\",\"image\":\"App_image__1pX6p\",\"loading\":\"App_loading__39tYA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__PcB4a\",\"app\":\"Footer_app__3nf39\",\"social_link\":\"Footer_social_link__jYO_U\"};"],"sourceRoot":""}