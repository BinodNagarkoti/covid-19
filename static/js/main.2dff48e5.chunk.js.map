{"version":3,"sources":["components/Charts/Charts.module.css","images/covid-19.png","components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","components/Footer/Footer.jsx","App.jsx","theme.js","serviceWorker.js","index.js","components/Cards/Cards.module.css","App.module.css","components/Footer/Footer.module.css"],"names":["module","exports","Cards","data","confirmed","deaths","recovered","updated_at","active","critical","console","log","className","styles","container","Grid","justify","item","color","xs","md","cx","card","CardContent","Typography","gutterBottom","variant","start","end","duration","separator","Date","toDateString","url2","ChangeableURL","GroupData","a","axios","get","d3","key","d","getMonth","rollup","value","entries","groupedByDate","fetchcriticalData","critical_arr_data","map","latest_data","total","reduce","acc","fetchGlobalData","new_confirmed","new_recovered","new_deaths","totalCritical","error","fetchCountryBasedData","country","calculated","loading","fetchData","fetchGlobalDailyData","modifiedData","dailyData","date","fetchCountryBasedDailyData","timeline","fetchDailyData","fetchCountries","availabel_data","filter","name","code","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","backgroundColor","fill","Paper","style","width","borderRadius","boxShadow","useStyles","makeStyles","theme","formControl","margin","spacing","marginBottom","minWidth","CountryPicker","handleCountryChange","classes","fetchedCountries","setFetchedCountries","FormControl","Select","native","inputProps","id","onChange","e","target","aria-label","Footer","Link","underline","href","social_link","Provider","size","Loading","require","App","props","fetchedData","setState","state","fetcheddata","this","textAlign","image","src","coronaImage","alt","Component","createMuiTheme","palette","type","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","ThemeProvider","Alert","severity","AlertTitle","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.2dff48e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__1mZfu\"};","module.exports = __webpack_public_path__ + \"static/media/covid-19.6ce9074d.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","/* eslint-disable camelcase */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\nimport styles from './Cards.module.css';\n\nconst Cards = ({\n  data: {\n    confirmed,\n    deaths,\n    recovered,\n    updated_at,\n    active,\n    critical,\n    // new_deaths,\n    // new_confirmed,\n    // new_recovered,\n  },\n}) => {\n  console.log(deaths, confirmed, recovered);\n  return (\n    <div className={styles.container}>\n      <Grid container justify=\"center\">\n        <Grid item color=\"primary\" xs={12} md={2} className={cx(styles.card)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Confirmed\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp start={0} end={confirmed} duration={2} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">{new Date(updated_at).toDateString()}</Typography>\n            <Typography variant=\"body2\"> Total Number of active case of COVID-19</Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={2} className={cx(styles.card)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Recoverd\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp start={0} end={recovered} duration={2} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">{new Date(updated_at).toDateString()}</Typography>\n\n            <Typography variant=\"body2\"> Total Number of recovered from COVID-19</Typography>\n          </CardContent>\n        </Grid>\n\n        <Grid item xs={12} md={2} className={cx(styles.card)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Critical\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp start={0} end={critical} duration={2} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">{new Date(updated_at).toDateString()}</Typography>\n\n            <Typography variant=\"body2\"> Total Number of Critical caused by COVID-19</Typography>\n          </CardContent>\n        </Grid>\n\n        <Grid item xs={12} md={2} className={cx(styles.card)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp start={0} end={deaths} duration={2} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">{new Date(updated_at).toDateString()}</Typography>\n\n            <Typography variant=\"body2\"> Total Number of death caused by COVID-19</Typography>\n          </CardContent>\n        </Grid>\n\n        <Grid item color=\"primary\" xs={12} md={2} className={cx(styles.card)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Active\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp start={0} end={active} duration={2} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">{new Date(updated_at).toDateString()}</Typography>\n            <Typography variant=\"body2\"> Total Number of active case of COVID-19</Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\nexport default Cards;\n","/* eslint-disable camelcase */\n/* eslint-disable no-console */\n/* eslint-disable consistent-return */\nimport axios from 'axios';\nimport * as d3 from 'd3';\n\n// const url = 'https://covid19.mathdro.id/api';\nconst url2 = 'https://corona-api.com/';\nlet ChangeableURL = url2;\n\nconst GroupData = async () => {\n  ChangeableURL = `${url2}/timeline`;\n  try {\n    const {\n      data: { data },\n    } = await axios.get(ChangeableURL);\n\n    const groupedByDate = await d3\n      .nest()\n      .key((d) => {\n        console.log(new Date(d.updated_at).getMonth());\n        return new Date(d.updated_at).getMonth();\n      })\n      .rollup((value) => ({\n        confirmed: d3.sum(value, (d) => d.confirmed),\n        deaths: d3.sum(value, (d) => d.deaths),\n        active: d3.sum(value, (d) => d.active),\n        recovered: d3.sum(value, (d) => d.recovered),\n      }))\n      .entries(data);\n    console.log('group by date', groupedByDate);\n  } catch (error) {\n    console.log(error);\n  }\n};\nconst fetchcriticalData = async () => {\n  const {\n    data: { data },\n  } = await axios.get(`${url2}/countries`);\n  const critical_arr_data = data.map((item) => item.latest_data.critical);\n  const total = critical_arr_data.reduce((acc, value) => acc + value);\n  return total;\n  // console.log(criticalData);\n};\n\nconst fetchGlobalData = async () => {\n  ChangeableURL = `${url2}/timeline`;\n  fetchcriticalData();\n  try {\n    const {\n      data: { data },\n    } = await axios.get(ChangeableURL);\n    // const { data } = fetchedData.data;\n\n    const {\n      confirmed,\n      recovered,\n      deaths,\n      updated_at,\n      active,\n      new_confirmed,\n      new_recovered,\n      new_deaths,\n    } = data[0];\n    const totalCritical = await fetchcriticalData();\n    // const totalCritical = critical_arr_data.reduce((acc, value) => acc + value);\n    console.log(`total critical value: ${totalCritical}`);\n    // console.log(`lastUpdate:,${ lastUpdate }`)\n\n    return {\n      confirmed,\n      recovered,\n      deaths,\n      updated_at,\n      active,\n      critical: totalCritical,\n      new_confirmed,\n      new_recovered,\n      new_deaths,\n    };\n  } catch (error) {\n    console.error(error);\n  }\n};\nconst fetchCountryBasedData = async (country) => {\n  ChangeableURL = `${url2}/countries/${country}`;\n  console.log(`Selected Country:,${country}`);\n  try {\n    const {\n      data: { data },\n    } = await axios.get(ChangeableURL);\n    // const { data } = fetchedData.data;\n\n    const {\n      latest_data: { confirmed, recovered, deaths, active, critical, calculated },\n      updated_at,\n    } = data;\n    return {\n      critical,\n      confirmed,\n      recovered,\n      deaths,\n      updated_at,\n      active,\n\n      loading: false,\n    };\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const fetchData = async (country) => {\n  GroupData();\n  const data = country ? fetchCountryBasedData(country) : fetchGlobalData();\n  return data;\n};\nconst fetchGlobalDailyData = async () => {\n  try {\n    const {\n      data: { data },\n    } = await axios.get(`${url2}/timeline`);\n\n    const modifiedData = data.map((dailyData) => ({\n      recovered: dailyData.recovered,\n      active: dailyData.active,\n      deaths: dailyData.deaths,\n      date: dailyData.date,\n      loading: false,\n    }));\n    return modifiedData;\n  } catch (error) {\n    console.error(error);\n  }\n};\nconst fetchCountryBasedDailyData = async (country) => {\n  try {\n    const {\n      data: {\n        data: { timeline },\n      },\n    } = await axios.get(`${url2}/countries/${country}`);\n\n    const modifiedData = timeline.map((dailyData) => ({\n      recovered: dailyData.recovered,\n      active: dailyData.active,\n      deaths: dailyData.deaths,\n      date: dailyData.date,\n    }));\n    return modifiedData;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchDailyData = async (country) => {\n  const data = country ? fetchCountryBasedDailyData(country) : fetchGlobalDailyData();\n  return data;\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { data },\n    } = await axios.get(`${url2}/countries`);\n\n    const availabel_data = data.filter((country) => country.latest_data.confirmed > 0);\n    console.log('check avaiable data', availabel_data);\n    return availabel_data.map((country) => ({ name: country.name, code: country.code }));\n  } catch (error) {\n    console.error(error);\n  }\n};\n","/* eslint-disable react/prop-types */\n/* eslint-disable no-shadow */\nimport React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { Paper } from '@material-ui/core';\n// eslint-disable-next-line import/named\nimport { fetchDailyData } from '../../api';\nimport styles from './Charts.module.css';\n\nconst Charts = ({ country }) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData(country));\n    };\n    fetchAPI();\n  }, [country]);\n\n  const lineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ active }) => active),\n            label: 'Active',\n            borderColor: 'rgba(0,0,255,0.5)',\n            backgroundColor: 'rgba(0,0,255,0.5)',\n            fill: true,\n          },\n          {\n            data: dailyData.map(({ recovered }) => recovered),\n            label: 'Recovered',\n            borderColor: 'rgba(0,187,0,0.5)',\n            backgroundColor: 'rgba(0,255,0,0.5)',\n            fill: true,\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: 'Deaths',\n            borderColor: 'rgba(255,0,0,0.5)',\n            backgroundColor: 'rgba(255,0,0,0.5)',\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n  // const barChart = active ? (\n  //   <Bar\n  //     data={{\n  //       labels: ['infected', 'recovered', 'deaths'],\n  //       datasets: [\n  //         {\n  //           label: 'People',\n  //           backgroundColor: ['rgba(0,0,255,0.5)', 'rgba(0,255,0,0.5)', 'rgba(255,0,0,0.5)'],\n  //           data: [active, recovered, deaths],\n  //         },\n  //       ],\n  //     }}\n  //     options={{\n  //       legends: { display: false },\n  //       title: { display: true, text: `Current State in ${country}` },\n  //     }}\n  //   />\n  // ) : null;\n  return (\n    <div className={styles.container}>\n      <Paper\n        style={{\n          width: '100vw',\n          backgroundColor: '#e0e0e0',\n          borderRadius: '10px',\n          boxShadow:\n            '6px 6px 14px 0 rgba(0, 0, 0, 0.253) , -8px -8px 18px 0 rgba(255, 255, 255, 0.76) ',\n        }}\n      >\n        {/* {country ? barChart : lineChart} */}\n        {lineChart}\n      </Paper>\n    </div>\n  );\n};\nexport default Charts;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/prop-types */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useEffect } from 'react';\nimport { Select, FormControl, Paper } from '@material-ui/core';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport styles from './CountryPicker.module.css';\n// eslint-disable-next-line import/named\nimport { fetchCountries } from '../../api';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    marginBottom: 50,\n    minWidth: 220,\n  },\n}));\nconst CountryPicker = ({ handleCountryChange }) => {\n  const classes = useStyles();\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchCountries());\n      // console.log(`country List: ${fetchedCountries}`);\n    };\n    fetchAPI();\n  }, [setFetchedCountries]);\n\n  return (\n    <FormControl className={classes.formControl}>\n      {/* <InputLabel shrink htmlFor=\"outlined-age-native-simple\">\n        Country\n      </InputLabel> */}\n      <Select\n        native\n        label=\"Country\"\n        inputProps={{\n          name: 'Country',\n          id: '',\n        }}\n        onChange={(e) => handleCountryChange(e.target.value)}\n      >\n        <option aria-label=\"None\" value=\"\">\n          Global\n        </option>\n        {fetchedCountries.map((country) => (\n          <option key={country.code} value={country.code}>\n            {country.name}\n          </option>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\nexport default CountryPicker;\n","import React from 'react';\nimport { Typography, Link } from '@material-ui/core';\nimport { FaFacebook, FaTwitter, FaGithub, FaLinkedin } from 'react-icons/fa';\nimport { IconContext } from 'react-icons';\nimport styles from './Footer.module.css';\n\nconst Footer = () => {\n  return (\n    <div className={styles.container}>\n      <Typography>\n        By{' '}\n        <Link underline=\"none\" color=\"primary\" href=\"https://github.com/BinodNagarkoti\">\n          Binod Nagarkoti\n        </Link>\n      </Typography>\n      <Typography className={styles.social_link}>\n        <IconContext.Provider value={{ color: '#385898', size: '25px' }}>\n          <Link underline=\"none\" href=\"https://www.facebook.com/Binodb/\" name=\"facebook\">\n            <FaFacebook />\n          </Link>\n        </IconContext.Provider>\n        <IconContext.Provider value={{ color: 'rgb(29, 161, 242)', size: '25px' }}>\n          <Link underline=\"none\" href=\"https://twitter.com/binod1365\" name=\"Twitter\">\n            <FaTwitter />\n          </Link>\n        </IconContext.Provider>\n        <IconContext.Provider value={{ color: '#003f67', size: '25px' }}>\n          <Link\n            underline=\"none\"\n            href=\"https://www.linkedin.com/in/binod-nagarkoti-496245128?lipi=urn%3Ali%3Apage%3Ad_flagship3_profile_view_base_contact_details%3B0rrxJXsqT0SQGAfwBMDI7A%3D%3D\"\n            name=\"LinkedIn\"\n          >\n            <FaLinkedin />\n          </Link>\n        </IconContext.Provider>\n        <IconContext.Provider value={{ color: 'black', size: '25px' }}>\n          <Link underline=\"none\" href=\"https://github.com/BinodNagarkoti\" name=\"Github\">\n            <FaGithub />\n          </Link>\n        </IconContext.Provider>\n      </Typography>\n      <Typography color=\"textSecondary\"> May 31 2020 </Typography>\n    </div>\n  );\n};\nexport default Footer;\n","import React, { Component } from 'react';\nimport { Charts, Cards, CountryPicker, Footer } from './components';\nimport style from './App.module.css';\n// eslint-disable-next-line import/named\nimport { fetchData } from './api';\nimport coronaImage from './images/covid-19.png';\n\nconst Loading = require('react-loading-animation');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: { loading: true },\n      country: '',\n    };\n  }\n\n  async componentDidMount() {\n    const fetcheddata = await fetchData();\n    this.setState({ data: fetcheddata });\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n    this.setState({ data: { loading: fetchedData?.loading, ...fetchedData }, country });\n  };\n\n  render() {\n    const { data, country } = this.state;\n    if (data?.loading) {\n      return (\n        <main className={style.loading}>\n          <h1 style={{ textAlign: 'center' }}>Fetching COVID-19 Data</h1>\n          <Loading />\n        </main>\n      );\n    }\n    return (\n      <main className={style.container}>\n        <div className={style.image}>\n          <img src={coronaImage} alt=\"COVID-19\" />\n        </div>\n        <Cards data={data} />\n\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Charts data={data} country={country} />\n        <Footer />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'light',\n  },\n});\nexport default theme;\n","/* eslint-disable no-use-before-define */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable import/no-named-as-default */\n/* eslint-disable import/no-named-as-default-member */\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { Offline, Online } from 'react-detect-offline';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport App from './App';\nimport theme from './theme';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Online>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Online>\n    <Offline>\n      <Alert severity=\"error\">\n        <AlertTitle> No Internet </AlertTitle> Sorry! There is no{' '}\n        <strong>internet Connection</strong>\n      </Alert>\n    </Offline>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"MuiCard-root\":\"Cards_MuiCard-root__30flU\",\"card\":\"Cards_card__eGUfZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\",\"loading\":\"App_loading__wCN4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__st7Zp\",\"app\":\"Footer_app__2b3lT\",\"social_link\":\"Footer_social_link__28GMC\"};"],"sourceRoot":""}