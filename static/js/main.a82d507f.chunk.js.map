{"version":3,"sources":["components/Charts/Charts.module.css","images/covid-19.png","components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","components/Footer/Footer.jsx","App.jsx","theme.js","serviceWorker.js","index.js","components/Cards/Cards.module.css","App.module.css","components/Footer/Footer.module.css"],"names":["module","exports","Cards","data","confirmed","deaths","recovered","lastUpdate","className","styles","container","Grid","justify","item","color","xs","md","cx","card","CardContent","Typography","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","ChangeableURL","axios","get","console","error","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legends","display","title","text","Paper","style","width","borderRadius","boxShadow","useStyles","makeStyles","theme","formControl","margin","spacing","marginBottom","minWidth","CountryPicker","handleCountryChange","classes","fetchedCountries","setFetchedCountries","FormControl","InputLabel","shrink","htmlFor","Select","native","inputProps","id","onChange","e","target","aria-label","key","Footer","Link","underline","href","social_link","Provider","size","Loading","require","App","props","fetchedData","setState","state","fetcheddata","this","image","src","coronaImage","alt","loading","textAlign","Component","createMuiTheme","palette","type","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","ThemeProvider","Alert","severity","AlertTitle","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a82d507f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__1mZfu\"};","module.exports = __webpack_public_path__ + \"static/media/covid-19.6ce9074d.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\nimport styles from './Cards.module.css';\n\nconst Cards = ({ data: { confirmed, deaths, recovered, lastUpdate } }) => {\n  return (\n    <div className={styles.container}>\n      <Grid container justify=\"center\">\n        <Grid item color=\"primary\" xs={12} md={3} className={cx(styles.card)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Total Infected\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp start={0} end={confirmed.value} duration={2} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n            <Typography variant=\"body2\"> Total Number of active case of COVID-19</Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} className={cx(styles.card)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Total Recoverd\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp start={0} end={recovered.value} duration={2} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n\n            <Typography variant=\"body2\"> Total Number of recovered from COVID-19</Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} className={cx(styles.card)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Total Deaths\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp start={0} end={deaths.value} duration={2} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n\n            <Typography variant=\"body2\"> Total Number of death caused by COVID-19</Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\nexport default Cards;\n","/* eslint-disable no-console */\n/* eslint-disable consistent-return */\nimport axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\nexport const fetchData = async (country) => {\n  let ChangeableURL = url;\n  if (country) {\n    ChangeableURL = `${url}/countries/${country}`;\n  }\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(ChangeableURL);\n    return {\n      confirmed,\n      recovered,\n      deaths,\n      lastUpdate,\n    };\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    const modifiedData = data.map((dailyData) => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate,\n    }));\n    return modifiedData;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`${url}/countries`);\n    return countries.map((country) => country.name);\n  } catch (error) {\n    console.error(error);\n  }\n};\n","/* eslint-disable react/prop-types */\n/* eslint-disable no-shadow */\nimport React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { Paper } from '@material-ui/core';\nimport { fetchDailyData } from '../../api';\nimport styles from './Charts.module.css';\n\nconst Charts = ({ data: { recovered, deaths, confirmed }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n    fetchAPI();\n  }, []);\n\n  const lineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: 'Infected',\n            borderColor: 'rgba(0,0,255,0.5)',\n            fill: true,\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: 'Deaths',\n            borderColor: 'rgba(255,0,0,0.5)',\n            backgroundColor: 'rgba(255,0,0,0.5)',\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: ['infected', 'recovered', 'deaths'],\n        datasets: [\n          {\n            label: 'People',\n            backgroundColor: ['rgba(0,0,255,0.5)', 'rgba(0,255,0,0.5)', 'rgba(255,0,0,0.5)'],\n            data: [confirmed.value, recovered.value, deaths.value],\n          },\n        ],\n      }}\n      options={{\n        legends: { display: false },\n        title: { display: true, text: `Current State in ${country}` },\n      }}\n    />\n  ) : null;\n  return (\n    <div className={styles.container}>\n      <Paper\n        style={{\n          width: '100vw',\n          backgroundColor: '#e0e0e0',\n          borderRadius: '10px',\n          boxShadow:\n            '6px 6px 14px 0 rgba(0, 0, 0, 0.253) , -8px -8px 18px 0 rgba(255, 255, 255, 0.76) ',\n        }}\n      >\n        {country ? barChart : lineChart}\n      </Paper>\n    </div>\n  );\n};\nexport default Charts;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/prop-types */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useEffect } from 'react';\nimport { Select, FormControl, Paper } from '@material-ui/core';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport styles from './CountryPicker.module.css';\nimport { fetchCountries } from '../../api';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    marginBottom: 50,\n    minWidth: 220,\n  },\n}));\nconst CountryPicker = ({ handleCountryChange }) => {\n  const classes = useStyles();\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchCountries());\n    };\n    fetchAPI();\n  }, [setFetchedCountries]);\n\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel shrink htmlFor=\"outlined-age-native-simple\">\n        Country\n      </InputLabel>\n      <Select\n        native\n        label=\"Country\"\n        inputProps={{\n          name: 'Country',\n          id: '',\n        }}\n        onChange={(e) => handleCountryChange(e.target.value)}\n      >\n        <option aria-label=\"None\" value=\"\">\n          Global\n        </option>\n        {fetchedCountries.map((country) => (\n          <option key={country} value={country}>\n            {' '}\n            {country}{' '}\n          </option>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\nexport default CountryPicker;\n","import React from 'react';\nimport { Typography, Link } from '@material-ui/core';\nimport { FaFacebook, FaTwitter, FaGithub, FaLinkedin } from 'react-icons/fa';\nimport { IconContext } from 'react-icons';\nimport styles from './Footer.module.css';\n\nconst Footer = () => {\n  return (\n    <div className={styles.container}>\n      <Typography>\n        By{' '}\n        <Link underline=\"none\" color=\"primary\" href=\"https://github.com/BinodNagarkoti\">\n          Binod Nagarkoti\n        </Link>\n      </Typography>\n      <Typography className={styles.social_link}>\n        <IconContext.Provider value={{ color: '#385898', size: '25px' }}>\n          <Link underline=\"none\" href=\"https://www.facebook.com/Binodb/\" name=\"facebook\">\n            <FaFacebook />\n          </Link>\n        </IconContext.Provider>\n        <IconContext.Provider value={{ color: 'rgb(29, 161, 242)', size: '25px' }}>\n          <Link underline=\"none\" href=\"https://twitter.com/binod1365\" name=\"Twitter\">\n            <FaTwitter />\n          </Link>\n        </IconContext.Provider>\n        <IconContext.Provider value={{ color: '#003f67', size: '25px' }}>\n          <Link\n            underline=\"none\"\n            href=\"https://www.linkedin.com/in/binod-nagarkoti-496245128?lipi=urn%3Ali%3Apage%3Ad_flagship3_profile_view_base_contact_details%3B0rrxJXsqT0SQGAfwBMDI7A%3D%3D\"\n            name=\"LinkedIn\"\n          >\n            <FaLinkedin />\n          </Link>\n        </IconContext.Provider>\n        <IconContext.Provider value={{ color: 'black', size: '25px' }}>\n          <Link underline=\"none\" href=\"https://github.com/BinodNagarkoti\" name=\"Github\">\n            <FaGithub />\n          </Link>\n        </IconContext.Provider>\n      </Typography>\n      <Typography color=\"textSecondary\"> May 31 2020 </Typography>\n    </div>\n  );\n};\nexport default Footer;\n","import React, { Component } from 'react';\nimport { Charts, Cards, CountryPicker, Footer } from './components';\nimport style from './App.module.css';\nimport { fetchData } from './api';\nimport coronaImage from './images/covid-19.png';\n\nconst Loading = require('react-loading-animation');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      country: '',\n    };\n  }\n\n  async componentDidMount() {\n    const fetcheddata = await fetchData();\n    this.setState({ data: fetcheddata });\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n    this.setState({ data: fetchedData, country });\n  };\n\n  render() {\n    const { data, country } = this.state;\n    if (!data.confirmed) {\n      return (\n        <main className={style.loading}>\n          <h1 style={{ textAlign: 'center' }}>Fetching COVID-19 Data</h1>\n          <Loading />\n        </main>\n      );\n    }\n    return (\n      <main className={style.container}>\n        <div className={style.image}>\n          <img src={coronaImage} alt=\"COVID-19\" />\n        </div>\n        <Cards data={data} />\n\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Charts data={data} country={country} />\n        <Footer />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'light',\n  },\n});\nexport default theme;\n","/* eslint-disable no-use-before-define */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable import/no-named-as-default */\n/* eslint-disable import/no-named-as-default-member */\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { Offline, Online } from 'react-detect-offline';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport App from './App';\nimport theme from './theme';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Online>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Online>\n    <Offline>\n      <Alert severity=\"error\">\n        <AlertTitle> No Internet </AlertTitle> Sorry! There is no{' '}\n        <strong>internet Connection</strong>\n      </Alert>\n    </Offline>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"MuiCard-root\":\"Cards_MuiCard-root__30flU\",\"card\":\"Cards_card__eGUfZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\",\"loading\":\"App_loading__wCN4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__st7Zp\",\"app\":\"Footer_app__2b3lT\",\"social_link\":\"Footer_social_link__28GMC\"};"],"sourceRoot":""}